{{- $deployment := env.Getenv "ABODEMINE_TOFU_DEPLOYMENT" -}}
{{- $params := datasource "params" -}}
{{- $project_slug := env.Getenv "ABODEMINE_PROJECT_SLUG" -}}

{{- $database_servers := index $params "infra/opentofu/projects/databases" -}}
{{- $project := index $params (path.Join "projects" $project_slug) -}}

# Code generated by gomplate. DO NOT EDIT.

aws_account_id = "{{ $params.aws.account_id }}"
aws_region     = "{{ $params.aws.region }}"
deployment     = "{{ $deployment }}"

ecs = {
  clusters = {
    main_fargate = {
      arn = "{{ $params.aws.ecs.clusters.main_fargate.arn }}"
    }
  }

  services = {
    main = {
      load_balancer = {
        container_name = "{{ $project.containers.main.name }}",
        container_port = {{ $project.containers.main.ports.http.port }},
        target_group_arn = "{{ $project.ecs.services.main.lb_target_groups.main.arn }}",
      }

      network_configuration = {
        security_groups = [
          {{- range $project.ecs.services.main.security_groups }}
          "{{ .id }}",
          {{- end }}
          "{{ (index $database_servers "os-alpha").security_groups.users.id }}",
          "{{ (index $database_servers "pg-alpha").security_groups.users.id }}",
          "{{ (index $database_servers "pg-beta").security_groups.users.id }}",
          "{{ (index $database_servers "vk-alpha").security_groups.users.id }}",
        ]

        subnets = [
          {{- range (index $params "aws/vpcs").main.private_subnets }}
          "{{ .id }}",
          {{- end }}
        ]
      }
    }
  }
}

iam_roles = {
  main = {
    arn = "{{ $project.ecs.services.main.iam_roles.main.arn }}"
  }
}

project = {
  containers = {
    main = {
      cpu = {{ $project.containers.main.cpu }}
      env = [
        {
          name = "ABODEMINE_SAAS_CONFIG_PATH",
          value = "{{ env.Getenv "ABODEMINE_SAAS_CONFIG_PATH" }}",
        },
        {
          name = "ABODEMINE_SAAS_CONFIG_PATH_ENC_ITER",
          value = "{{ env.Getenv "ABODEMINE_SAAS_CONFIG_PATH_ENC_ITER" }}",
        },
        {
          name = "ABODEMINE_SAAS_CONFIG_PATH_ENC_PASS",
          value = "{{ env.Getenv "ABODEMINE_SAAS_CONFIG_PATH_ENC_PASS" }}",
        },
      ]
      image  = "{{ env.Getenv "ABODEMINE_APP_IMAGE_TAG" }}"
      memory = {{ $project.containers.main.memory }}
      name   = "{{ $project.containers.main.name }}"
      ports  = {
        http = {
          name = "{{ $project.containers.main.ports.http.name }}"
          port = "{{ $project.containers.main.ports.http.port }}"
        }
      }
    }
  }
  slug = "{{ $project.slug }}"
}

s3_backend_bucket = "{{ index $params "infra/opentofu/projects/main" "s3_backend_bucket" }}"
s3_backend_key    = "{{ $project.opentofu.backend_keys.build }}"
s3_backend_table  = "{{ index $params "infra/opentofu/projects/main" "s3_backend_table" }}"

tags = {
  context    = "build"
  deployment = "{{ $deployment }}"
  opentofu   = "true"
  project    = "{{ $project.slug }}"
}
