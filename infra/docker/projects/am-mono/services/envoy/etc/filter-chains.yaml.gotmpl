{{- $config := datasource "config" -}}
{{- $endpoints := $config.endpoints -}}
{{- $vars := $config.vars -}}

# Code generated by gomplate. DO NOT EDIT.

        # abodemine.test
        - filter_chain_match:
            server_names:
              - "*.abodemine.test"
              - "*.abodemine.test:8443"

          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols:
                  - h2
                  - http/1.1
                tls_certificates:
                  - certificate_chain:
                      filename: {{ filepath.Join $vars.dirs.workspace "etc/ssl/abodemine.test-peer-chain.pem" }}
                    private_key:
                      filename: {{ filepath.Join $vars.dirs.workspace "etc/ssl/abodemine.test-peer-key.pem" }}

          filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_https
                http_filters:
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                access_log:
                  - name: envoy.access_loggers.stream
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                route_config:
                  name: https_route
                  virtual_hosts:
                    # admin dev
                    - name: admin
                      domains:
                        - "admin.abodemine.test"
                        - "admin.abodemine.test:8443"
                      routes:
                        - match:
                            prefix: /
                          route:
                            cluster: {{ (index $endpoints "nginx").internal.ports.http.name }}
                            timeout: 60s
                            upgrade_configs:
                              upgrade_type: websocket

                    # admin build
                    - name: admin-build
                      domains:
                        - "admin-build.abodemine.test"
                        - "admin-build.abodemine.test:8443"
                      routes:
                        - match:
                            prefix: /
                          route:
                            cluster: {{ (index $endpoints "nginx").internal.ports.http.name }}
                            timeout: 60s

                    # api dev
                    - name: api
                      domains:
                        - "api.abodemine.test"
                        - "api.abodemine.test:8443"
                      routes:
                        - match:
                            prefix: /
                          route:
                            cluster: {{ (index $endpoints "servers-go-api").internal.ports.http.name }}

                    # opensearch-dashboards
                    - name: opensearch
                      domains:
                        - "opensearch.abodemine.test"
                        - "opensearch.abodemine.test:8443"
                      routes:
                        - match:
                            prefix: /
                          route:
                            cluster: {{ (index $endpoints "opensearch-dashboards").internal.ports.http.name }}
                            timeout: 60s
                            upgrade_configs:
                              upgrade_type: websocket

                    # saas dev
                    - name: saas
                      domains:
                        - "app.abodemine.test"
                        - "app.abodemine.test:8443"
                      routes:
                        - match:
                            prefix: /api/
                          route:
                            cluster: {{ (index $endpoints "servers-go-saas").internal.ports.http.name }}

                        - match:
                            prefix: /
                          route:
                            cluster: {{ (index $endpoints "nginx").internal.ports.http.name }}
                            timeout: 60s
                            upgrade_configs:
                              upgrade_type: websocket

                    # saas build
                    - name: saas-build
                      domains:
                        - "app-build.abodemine.test"
                        - "app-build.abodemine.test:8443"
                      routes:
                        - match:
                            prefix: /api/
                          route:
                            cluster: {{ (index $endpoints "servers-go-saas").internal.ports.http.name }}

                        - match:
                            prefix: /
                          route:
                            cluster: {{ (index $endpoints "nginx").internal.ports.http.name }}
                            timeout: 60s

                    # saas-whitelabel dev
                    - name: saas-whitelabel
                      domains:
                        - "whitelabel.abodemine.test"
                        - "whitelabel.abodemine.test:8443"
                      routes:
                        - match:
                            prefix: /api/
                          route:
                            cluster: {{ (index $endpoints "servers-go-saas").internal.ports.http.name }}

                        - match:
                            prefix: /
                          route:
                            cluster: {{ (index $endpoints "nginx").internal.ports.http.name }}
                            timeout: 60s
                            upgrade_configs:
                              upgrade_type: websocket

                    # saas-whitelabel build
                    - name: saas-whitelabel-build
                      domains:
                        - "whitelabel-build.abodemine.test"
                        - "whitelabel-build.abodemine.test:8443"
                      routes:
                        - match:
                            prefix: /api/
                          route:
                            cluster: {{ (index $endpoints "servers-go-saas").internal.ports.http.name }}

                        - match:
                            prefix: /
                          route:
                            cluster: {{ (index $endpoints "nginx").internal.ports.http.name }}
                            timeout: 60s

        # alpha.test
        - filter_chain_match:
            server_names:
              - "*.alpha.test"
              - "*.alpha.test:8443"

          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols:
                  - h2
                  - http/1.1
                tls_certificates:
                  - certificate_chain:
                      filename: {{ filepath.Join $vars.dirs.workspace "etc/ssl/alpha.test-peer-chain.pem" }}
                    private_key:
                      filename: {{ filepath.Join $vars.dirs.workspace "etc/ssl/alpha.test-peer-key.pem" }}

          filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_https
                http_filters:
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                access_log:
                  - name: envoy.access_loggers.stream
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                route_config:
                  name: https_route
                  virtual_hosts:
                    # Used for testing external access to the saas service.
                    - name: saas-client
                      domains:
                        - "client.alpha.test"
                        - "client.alpha.test:8443"
                      routes:
                        # saas
                        - match:
                            prefix: /zxkvkpkzhpah/
                          route:
                            cluster: {{ (index $endpoints "servers-go-saas").internal.ports.http.name }}

        # omega.test
        - filter_chain_match:
            server_names:
              - "*.omega.test"
              - "*.omega.test:8443"

          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols:
                  - h2
                  - http/1.1
                tls_certificates:
                  - certificate_chain:
                      filename: {{ filepath.Join $vars.dirs.workspace "etc/ssl/omega.test-peer-chain.pem" }}
                    private_key:
                      filename: {{ filepath.Join $vars.dirs.workspace "etc/ssl/omega.test-peer-key.pem" }}

          filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_https
                http_filters:
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                access_log:
                  - name: envoy.access_loggers.stream
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                route_config:
                  name: https_route
                  virtual_hosts:
                    # saas-whitelabel dev
                    - name: saas-whitelabel
                      domains:
                        - "app.omega.test"
                        - "app.omega.test:8443"
                      routes:
                        - match:
                            prefix: /api/
                          route:
                            cluster: {{ (index $endpoints "servers-go-saas").internal.ports.http.name }}

                        - match:
                            prefix: /
                          route:
                            cluster: {{ (index $endpoints "nginx").internal.ports.http.name }}
                            timeout: 60s
                            upgrade_configs:
                              upgrade_type: websocket

                    # saas-whitelabel build
                    - name: saas-whitelabel-build
                      domains:
                        - "app-build.omega.test"
                        - "app-build.omega.test:8443"
                      routes:
                        - match:
                            prefix: /api/
                          route:
                            cluster: {{ (index $endpoints "servers-go-saas").internal.ports.http.name }}

                        - match:
                            prefix: /
                          route:
                            cluster: {{ (index $endpoints "nginx").internal.ports.http.name }}
                            timeout: 60s
