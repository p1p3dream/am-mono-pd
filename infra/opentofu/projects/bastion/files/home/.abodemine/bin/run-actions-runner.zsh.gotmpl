{{- $env := datasource "env" -}}

{{- $config := datasource "config" -}}
{{- $user_data := $config.vars.user_data -}}

#!/usr/bin/zsh
# Code generated by gomplate. DO NOT EDIT.

set -eo pipefail

source ~/.abodemine/code/zsh/base.zsh

TEMP_DIR={{ filepath.Join $user_data.dirs.tmp "$(uuidgen)" }}
mkdir -p ${TEMP_DIR}

################################################################################
# Params.
################################################################################

PARAMS_FILE={{ filepath.Join "${TEMP_DIR}" "params.json" }}

aws ssm \
    get-parameters-by-path \
    --path "/{{ $env.ABODEMINE_TOFU_DEPLOYMENT }}/tools/on-demand-runner/" \
    --recursive \
    --query "Parameters[*].[Name,Value]" \
    --output json \
| jq 'map({(.[0]): .[1]}) | add' \
> ${PARAMS_FILE}

# Set up and run the GitHub actions runner.
# Ref: https://github.com/organizations/abodemine/settings/actions/runners/new?arch=arm64&os=linux.

PARAMS_PAT=$(cat ${PARAMS_FILE} | jq -Mr '."/{{ $env.ABODEMINE_TOFU_DEPLOYMENT }}/tools/on-demand-runner/github-actions-runner-token"')
PARAMS_URL=$(cat ${PARAMS_FILE} | jq -Mr '."/{{ $env.ABODEMINE_TOFU_DEPLOYMENT }}/tools/on-demand-runner/github-actions-runner-url"')

################################################################################
# Runner.
################################################################################

remove_runner() {
    # Remove the runner so we don't have to do any manual cleanup.

    {{ filepath.Join $user_data.dirs.works "runner/config.sh" }} \
        remove \
        --pat ${PARAMS_PAT}
}

# Ensure we remove any lingering previous runner.
remove_runner | true

{{ filepath.Join $user_data.dirs.works "runner/config.sh" }} \
    --unattended \
    --disableupdate \
    --name $(uuidgen) \
    --labels on-demand-runner,build-version-{{ $env.ABODEMINE_BUILD_VERSION }} \
    --pat ${PARAMS_PAT} \
    --url ${PARAMS_URL}

rm -rf ${TEMP_DIR}

handle_signal() {
    echo "$1 detected, cleaning up..."
    remove_runner
    exit $?
}

trap 'handle_signal SIGINT' INT
trap 'handle_signal SIGTERM' TERM

{{ filepath.Join $user_data.dirs.works "runner/run.sh" }} &
wait $!

remove_runner
