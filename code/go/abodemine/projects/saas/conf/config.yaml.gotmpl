{{- $config := datasource "config" -}}
{{- $endpoints := $config.endpoints -}}
{{- $env := datasource "env" -}}
{{- $local_ci := eq (env.Getenv "LOCAL_CI") "true" -}}

# Code generated by gomplate. DO NOT EDIT.

casbin:
  "saas/default":
    model: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/casbin/projects/saas/policies/default/model.conf" }}"
    policy: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/casbin/projects/saas/policies/default/policy.csv" }}"

deployment_environment: "local{{ if $local_ci }}_ci{{ end }}"

{{ if env.Getenv "SENTRY_DSN" }}
sentry:
  dsn: "{{ env.Getenv "SENTRY_DSN" }}"
{{ end }}

duration:
  # 7 days.
  saas_session: 168h

{{ if index $env "ABODEMINE_SAAS_FLAGS" }}
flags:
{{- range strings.Split "," $env.ABODEMINE_SAAS_FLAGS }}
  - "{{ . | strings.TrimSpace }}"
{{- end }}
{{ end }}

{{ $endpoint := index $endpoints "servers-go-saas" }}
http_server:
  bind: 0.0.0.0
  port: {{ $endpoint.internal.ports.http.port }}
  tls:
    certificates:
      - cert_file: {{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "etc/ssl/abodemine.local-peer-chain.pem" }}
        key_file: {{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "etc/ssl/abodemine.local-peer-key.pem" }}

paseto:
  session:
    # ugen -al 32 --hex
    key: 149e7270aa6161167343816e6fdce543b0bd743ea13ae48c51af735941e93c51

  # MUST match api config exactly.
  "token-exchange":
    # ugen -al 32 --hex
    key: d0d64d8a92541a7672c41ecde44f1adfde8fb392ac3095c7c48dfe0c0aafa224

{{ $endpoint := index $endpoints "postgres" }}
postgres:
  saas:
    host: {{ $endpoint.internal.address }}
    port: {{ $endpoint.internal.ports.tcp.port }}
    user: "abodemine"
    dbname: "saas{{ if $local_ci }}_test{{ end }}"
    options:
      driver: "pgx"
      pingAfterConnect: "true"

{{ $endpoint := index $endpoints "valkey" }}
valkey:
  session:
    nodes:
      - host: {{ $endpoint.internal.address }}
        port: {{ $endpoint.internal.ports.tcp.port }}
    scripts:
      "create-session":
        file: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/lua/valkey/session/create-session.lua" }}"
      "select-session":
        file: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/lua/valkey/session/select-session.lua" }}"
      "delete-session":
        file: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/lua/valkey/session/delete-session.lua" }}"

  token:
    nodes:
      - host: {{ $endpoint.internal.address }}
        port: {{ $endpoint.internal.ports.tcp.port }}
    scripts:
      "create-token":
        file: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/lua/valkey/token/create-token.lua" }}"
      "select-token":
        file: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/lua/valkey/token/select-token.lua" }}"
      "delete-token":
        file: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/lua/valkey/token/delete-token.lua" }}"
