{{- $config := datasource "config" -}}
{{- $endpoints := $config.endpoints -}}
{{- $env := datasource "env" -}}
{{- $local_ci := eq (env.Getenv "LOCAL_CI") "true" -}}

# Code generated by gomplate. DO NOT EDIT.

casbin:
  "api/default":
    model: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/casbin/projects/api/policies/default/model.conf" }}"
    policy: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/casbin/projects/api/policies/default/policy.csv" }}"

deployment_environment: "local{{ if $local_ci }}_ci{{ end }}"

{{ if env.Getenv "SENTRY_DSN" }}
sentry:
  dsn: "{{ env.Getenv "SENTRY_DSN" }}"
{{ end }}

duration:
  api_token_exchange_ttl: 1m

  saas_whitelabel_session_default: 4h
  saas_whitelabel_session_max: 12h

{{ if index $env "ABODEMINE_API_FLAGS" }}
flags:
{{- range strings.Split "," $env.ABODEMINE_API_FLAGS }}
  - "{{ . | strings.TrimSpace }}"
{{- end }}
{{ end }}

{{ $endpoint := index $endpoints "servers-go-api" }}
http_server:
  bind: 0.0.0.0
  port: {{ $endpoint.internal.ports.http.port }}
  tls:
    certificates:
      - cert_file: {{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "etc/ssl/abodemine.local-peer-chain.pem" }}
        key_file: {{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "etc/ssl/abodemine.local-peer-key.pem" }}

{{ $endpoint := index $endpoints "opensearch" }}
opensearch:
  search:
    addresses:
      - https://{{ $endpoint.internal.address }}:{{ $endpoint.internal.ports.http.port }}
    username: "admin"
    password: "{{ $env.OPENSEARCH_INITIAL_ADMIN_PASSWORD }}"
    compress_request_body: true
    # Setting discovery to true locally can cause certificate issues.
    discover_nodes_on_start: false

  legacy_api:
    addresses:
      - https://{{ $endpoint.internal.address }}:{{ $endpoint.internal.ports.http.port }}
    username: "admin"
    password: "{{ $env.OPENSEARCH_INITIAL_ADMIN_PASSWORD }}"
    compress_request_body: true
    # Setting discovery to true locally can cause certificate issues.
    discover_nodes_on_start: false

paseto:
  # MUST match saas config exactly.
  "token-exchange":
    # ugen -al 32 --hex
    key: d0d64d8a92541a7672c41ecde44f1adfde8fb392ac3095c7c48dfe0c0aafa224

{{ $endpoint := index $endpoints "postgres" }}
postgres:
  api:
    host: {{ $endpoint.internal.address }}
    port: {{ $endpoint.internal.ports.tcp.port }}
    user: "abodemine"
    dbname: "api{{ if $local_ci }}_test{{ end }}"
    options:
      driver: "pgx"
      pingAfterConnect: "true"

  datapipe:
    host: {{ $endpoint.internal.address }}
    port: {{ $endpoint.internal.ports.tcp.port }}
    user: "abodemine"
    dbname: "datapipe{{ if $local_ci }}_test{{ end }}"
    options:
      driver: "pgx"
      pingAfterConnect: "true"

{{ $endpoint := index $endpoints "valkey" }}
valkey:
  api:
    nodes:
      - host: {{ $endpoint.internal.address }}
        port: {{ $endpoint.internal.ports.tcp.port }}
    scripts:
      "select-api-session":
        file: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/lua/valkey/api/select-api-session.lua" }}"
      "update-api-session":
        file: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/lua/valkey/api/update-api-session.lua" }}"

  session:
    nodes:
      - host: {{ $endpoint.internal.address }}
        port: {{ $endpoint.internal.ports.tcp.port }}
    scripts:
      "create-session":
        file: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/lua/valkey/session/create-session.lua" }}"
      "select-session":
        file: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/lua/valkey/session/select-session.lua" }}"
      "delete-session":
        file: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/lua/valkey/session/delete-session.lua" }}"

  token:
    nodes:
      - host: {{ $endpoint.internal.address }}
        port: {{ $endpoint.internal.ports.tcp.port }}
    scripts:
      "create-token":
        file: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/lua/valkey/token/create-token.lua" }}"
      "select-token":
        file: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/lua/valkey/token/select-token.lua" }}"
      "delete-token":
        file: "{{ filepath.Join (env.Getenv "ABODEMINE_WORKSPACE") "code/lua/valkey/token/delete-token.lua" }}"

{{ $values := index $config.values "servers-go-api" }}
values:
  string:
    "os-addresses-index": "{{ index $values.string "os-addresses-index" }}"
