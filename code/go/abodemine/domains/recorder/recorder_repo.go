package recorder

import (
	"github.com/Masterminds/squirrel"
	"github.com/google/uuid"

	"abodemine/domains/arc"
	"abodemine/entities"
	"abodemine/lib/consts"
	"abodemine/lib/errors"
	"abodemine/lib/extutils"
)

type Repository interface {
	SelectRecorderRecord(r *arc.Request, in *SelectRecorderRecordInput) (*SelectRecorderRecordOutput, error)
}

type repository struct{}

func NewRepository() Repository {
	return &repository{}
}

type SelectRecorderRecordInput struct {
	Aupid *uuid.UUID
}

type SelectRecorderRecordOutput struct {
	Records []*entities.Recorder
}

func (repo *repository) SelectRecorderRecord(r *arc.Request, in *SelectRecorderRecordInput) (*SelectRecorderRecordOutput, error) {
	builder := squirrel.StatementBuilder.
		PlaceholderFormat(squirrel.Dollar).
		Select(
			"ad_df_recorder.transaction_id",
			"ad_df_recorder.document_recording_state_code",
			"ad_df_recorder.document_recording_county_name",
			"ad_df_recorder.document_recording_jurisdiction_name",
			"ad_df_recorder.document_recording_county_fi_ps",
			"ad_df_recorder.document_type_code",
			"ad_df_recorder.document_number_formatted",
			"ad_df_recorder.document_number_legacy",
			"ad_df_recorder.instrument_number",
			"ad_df_recorder.book",
			"ad_df_recorder.page",
			"ad_df_recorder.instrument_date",
			"ad_df_recorder.recording_date",
			"ad_df_recorder.transaction_type",
			"ad_df_recorder.transfer_info_purchase_type_code",
			"ad_df_recorder.foreclosure_auction_sale",
			"ad_df_recorder.transfer_info_distress_circumstance_code",
			"ad_df_recorder.quitclaim_flag",
			"ad_df_recorder.transfer_info_multi_parcel_flag",
			"ad_df_recorder.arms_length_flag",
			"ad_df_recorder.partial_interest",
			"ad_df_recorder.transfer_amount",
			"ad_df_recorder.transfer_amount_info_accuracy",
			"ad_df_recorder.transfer_tax_total",
			"ad_df_recorder.transfer_tax_city",
			"ad_df_recorder.transfer_tax_county",
			"ad_df_recorder.grantor1name_full",
			"ad_df_recorder.grantor1name_first",
			"ad_df_recorder.grantor1name_middle",
			"ad_df_recorder.grantor1name_last",
			"ad_df_recorder.grantor1name_suffix",
			"ad_df_recorder.grantor1info_entity_classification",
			"ad_df_recorder.grantor1info_owner_type",
			"ad_df_recorder.grantor2name_full",
			"ad_df_recorder.grantor2name_first",
			"ad_df_recorder.grantor2name_middle",
			"ad_df_recorder.grantor2name_last",
			"ad_df_recorder.grantor2name_suffix",
			"ad_df_recorder.grantor2info_entity_classification",
			"ad_df_recorder.grantor2info_owner_type",
			"ad_df_recorder.grantor3name_full",
			"ad_df_recorder.grantor3name_first",
			"ad_df_recorder.grantor3name_middle",
			"ad_df_recorder.grantor3name_last",
			"ad_df_recorder.grantor3name_suffix",
			"ad_df_recorder.grantor3info_entity_classification",
			"ad_df_recorder.grantor4name_full",
			"ad_df_recorder.grantor4name_first",
			"ad_df_recorder.grantor4name_middle",
			"ad_df_recorder.grantor4name_last",
			"ad_df_recorder.grantor4name_suffix",
			"ad_df_recorder.grantor4info_entity_classification",
			"ad_df_recorder.grantor_address_full",
			"ad_df_recorder.grantor_address_house_number",
			"ad_df_recorder.grantor_address_street_direction",
			"ad_df_recorder.grantor_address_street_name",
			"ad_df_recorder.grantor_address_street_suffix",
			"ad_df_recorder.grantor_address_street_post_direction",
			"ad_df_recorder.grantor_address_unit_prefix",
			"ad_df_recorder.grantor_address_unit_value",
			"ad_df_recorder.grantor_address_city",
			"ad_df_recorder.grantor_address_state",
			"ad_df_recorder.grantor_address_zip",
			"ad_df_recorder.grantor_address_zip4",
			"ad_df_recorder.grantor_address_crrt",
			"ad_df_recorder.grantor_address_info_format",
			"ad_df_recorder.grantor_address_info_privacy",
			"ad_df_recorder.grantee1name_full",
			"ad_df_recorder.grantee1name_first",
			"ad_df_recorder.grantee1name_middle",
			"ad_df_recorder.grantee1name_last",
			"ad_df_recorder.grantee1name_suffix",
			"ad_df_recorder.grantee1info_entity_classification",
			"ad_df_recorder.grantee1info_owner_type",
			"ad_df_recorder.grantee2name_full",
			"ad_df_recorder.grantee2name_first",
			"ad_df_recorder.grantee2name_middle",
			"ad_df_recorder.grantee2name_last",
			"ad_df_recorder.grantee2name_suffix",
			"ad_df_recorder.grantee2info_entity_classification",
			"ad_df_recorder.grantee_info_vesting1",
			"ad_df_recorder.grantee3name_full",
			"ad_df_recorder.grantee3name_first",
			"ad_df_recorder.grantee3name_middle",
			"ad_df_recorder.grantee3name_last",
			"ad_df_recorder.grantee3name_suffix",
			"ad_df_recorder.grantee3info_entity_classification",
			"ad_df_recorder.grantee4name_full",
			"ad_df_recorder.grantee4name_first",
			"ad_df_recorder.grantee4name_middle",
			"ad_df_recorder.grantee4name_last",
			"ad_df_recorder.grantee4name_suffix",
			"ad_df_recorder.grantee4info_entity_classification",
			"ad_df_recorder.grantee_mail_care_of_name",
			"ad_df_recorder.grantee_info_entity_count",
			"ad_df_recorder.grantee_info_vesting2",
			"ad_df_recorder.grantee_investor_flag",
			"ad_df_recorder.grantee_mail_address_full",
			"ad_df_recorder.grantee_mail_address_house_number",
			"ad_df_recorder.grantee_mail_address_street_direction",
			"ad_df_recorder.grantee_mail_address_street_name",
			"ad_df_recorder.grantee_mail_address_street_suffix",
			"ad_df_recorder.grantee_mail_address_street_post_direction",
			"ad_df_recorder.grantee_mail_address_unit_prefix",
			"ad_df_recorder.grantee_mail_address_unit_value",
			"ad_df_recorder.grantee_mail_address_city",
			"ad_df_recorder.grantee_mail_address_state",
			"ad_df_recorder.grantee_mail_address_zip",
			"ad_df_recorder.grantee_mail_address_zip4",
			"ad_df_recorder.grantee_mail_address_crrt",
			"ad_df_recorder.grantee_mail_address_info_format",
			"ad_df_recorder.grantee_mail_address_info_privacy",
			"ad_df_recorder.grantee_grantor_owner_relationship_code",
			"ad_df_recorder.title_company_standardized_code",
			"ad_df_recorder.title_company_standardized_name",
			"ad_df_recorder.title_company_raw",
			"ad_df_recorder.legal_description_part1",
			"ad_df_recorder.legal_description_part2",
			"ad_df_recorder.legal_description_part3",
			"ad_df_recorder.legal_description_part4",
			"ad_df_recorder.legal_range",
			"ad_df_recorder.legal_township",
			"ad_df_recorder.legal_section",
			"ad_df_recorder.legal_district",
			"ad_df_recorder.legal_sub_division",
			"ad_df_recorder.legal_tract",
			"ad_df_recorder.legal_block",
			"ad_df_recorder.legal_lot",
			"ad_df_recorder.legal_unit",
			"ad_df_recorder.legal_plat_map_book",
			"ad_df_recorder.legal_plat_map_page",
			"ad_df_recorder.apn_formatted",
			"ad_df_recorder.apn_original",
			"ad_df_recorder.property_address_full",
			"ad_df_recorder.property_address_house_number",
			"ad_df_recorder.property_address_street_direction",
			"ad_df_recorder.property_address_street_name",
			"ad_df_recorder.property_address_street_suffix",
			"ad_df_recorder.property_address_street_post_direction",
			"ad_df_recorder.property_address_unit_prefix",
			"ad_df_recorder.property_address_unit_value",
			"ad_df_recorder.property_address_city",
			"ad_df_recorder.property_address_state",
			"ad_df_recorder.property_address_zip",
			"ad_df_recorder.property_address_zip4",
			"ad_df_recorder.property_address_crrt",
			"ad_df_recorder.property_address_info_format",
			"ad_df_recorder.property_address_info_privacy",
			"ad_df_recorder.recorder_map_reference",
			"ad_df_recorder.property_use_group",
			"ad_df_recorder.property_use_standardized",
			"ad_df_recorder.mortgage1document_number_formatted",
			"ad_df_recorder.mortgage1document_number_legacy",
			"ad_df_recorder.mortgage1instrument_number",
			"ad_df_recorder.mortgage1book",
			"ad_df_recorder.mortgage1page",
			"ad_df_recorder.mortgage1recording_date",
			"ad_df_recorder.mortgage1type",
			"ad_df_recorder.mortgage1amount",
			"ad_df_recorder.mortgage1lender_code",
			"ad_df_recorder.mortgage1lender_name_full_standardized",
			"ad_df_recorder.mortgage1lender_name_first",
			"ad_df_recorder.mortgage1lender_name_last",
			"ad_df_recorder.mortgage1lender_address",
			"ad_df_recorder.mortgage1lender_address_city",
			"ad_df_recorder.mortgage1lender_address_state",
			"ad_df_recorder.mortgage1lender_address_zip",
			"ad_df_recorder.mortgage1lender_address_zip4",
			"ad_df_recorder.mortgage1lender_info_entity_classification",
			"ad_df_recorder.mortgage1lender_info_seller_carry_back_flag",
			"ad_df_recorder.mortgage1term",
			"ad_df_recorder.mortgage1term_type",
			"ad_df_recorder.mortgage1term_date",
			"ad_df_recorder.mortgage1info_prepayment_penalty_flag",
			"ad_df_recorder.mortgage1info_prepayment_term",
			"ad_df_recorder.mortgage1interest_rate_type",
			"ad_df_recorder.mortgage1interest_rate",
			"ad_df_recorder.mortgage1interest_type_initial",
			"ad_df_recorder.mortgage1fixed_step_conversion_rate",
			"ad_df_recorder.mortgage1document_info_rider_adjustable_rate_flag",
			"ad_df_recorder.mortgage1info_interest_type_change_year",
			"ad_df_recorder.mortgage1info_interest_type_change_month",
			"ad_df_recorder.mortgage1info_interest_type_change_day",
			"ad_df_recorder.mortgage1interest_rate_min_first_change_rate_conversion",
			"ad_df_recorder.mortgage1interest_rate_max_first_change_rate_conversion",
			"ad_df_recorder.mortgage1interest_change_frequency",
			"ad_df_recorder.mortgage1interest_margin",
			"ad_df_recorder.mortgage1interest_index",
			"ad_df_recorder.mortgage1interest_rate_max",
			"ad_df_recorder.mortgage1adjustable_rate_index",
			"ad_df_recorder.mortgage1interest_only_flag",
			"ad_df_recorder.mortgage1interest_only_period",
			"ad_df_recorder.mortgage2document_number_formatted",
			"ad_df_recorder.mortgage2document_number_legacy",
			"ad_df_recorder.mortgage2instrument_number",
			"ad_df_recorder.mortgage2book",
			"ad_df_recorder.mortgage2page",
			"ad_df_recorder.mortgage2recording_date",
			"ad_df_recorder.mortgage2type",
			"ad_df_recorder.mortgage2amount",
			"ad_df_recorder.mortgage2lender_code",
			"ad_df_recorder.mortgage2lender_name_full_standardized",
			"ad_df_recorder.mortgage2lender_name_first",
			"ad_df_recorder.mortgage2lender_name_last",
			"ad_df_recorder.mortgage2lender_address",
			"ad_df_recorder.mortgage2lender_address_city",
			"ad_df_recorder.mortgage2lender_address_state",
			"ad_df_recorder.mortgage2lender_address_zip",
			"ad_df_recorder.mortgage2lender_address_zip4",
			"ad_df_recorder.mortgage2lender_info_entity_classification",
			"ad_df_recorder.mortgage2lender_info_seller_carry_back_flag",
			"ad_df_recorder.mortgage2term",
			"ad_df_recorder.mortgage2term_type",
			"ad_df_recorder.mortgage2term_date",
			"ad_df_recorder.mortgage2info_prepayment_penalty_flag",
			"ad_df_recorder.mortgage2info_prepayment_term",
			"ad_df_recorder.mortgage2interest_rate_type",
			"ad_df_recorder.mortgage2interest_rate",
			"ad_df_recorder.mortgage2interest_type_initial",
			"ad_df_recorder.mortgage2fixed_step_conversion_rate",
			"ad_df_recorder.mortgage2document_info_rider_adjustable_rate_flag",
			"ad_df_recorder.mortgage2info_interest_type_change_year",
			"ad_df_recorder.mortgage2info_interest_type_change_month",
			"ad_df_recorder.mortgage2info_interest_type_change_day",
			"ad_df_recorder.mortgage2interest_rate_min_first_change_rate_conversion",
			"ad_df_recorder.mortgage2interest_rate_max_first_change_rate_conversion",
			"ad_df_recorder.mortgage2interest_change_frequency",
			"ad_df_recorder.mortgage2interest_margin",
			"ad_df_recorder.mortgage2interest_index",
			"ad_df_recorder.mortgage2interest_rate_max",
			"ad_df_recorder.mortgage2adjustable_rate_index",
			"ad_df_recorder.mortgage2interest_only_flag",
			"ad_df_recorder.mortgage2interest_only_period",
			"ad_df_recorder.transfer_info_purchase_down_payment",
			"ad_df_recorder.transfer_info_purchase_loan_to_value",
		).
		From("properties").
		Join("ad_df_recorder on properties.ad_attom_id = ad_df_recorder.attomid").
		Where("properties.id = ?", in.Aupid).
		OrderBy("ad_df_recorder.transaction_id desc")

	sql, args, err := builder.ToSql()
	if err != nil {
		return nil, &errors.Object{
			Id:     "4d9a5562-fb3c-4ee9-8575-8ff7f925a9d1",
			Code:   errors.Code_UNKNOWN,
			Detail: "Failed to build SQL.",
			Cause:  err.Error(),
		}
	}

	rows, err := extutils.PgxQuery(r, consts.ConfigKeyPostgresDatapipe, sql, args)
	if err != nil {
		return nil, errors.Forward(err, "9ff87893-3744-4aab-8ca7-f718835e38c6")
	}
	defer rows.Close()

	out := &SelectRecorderRecordOutput{}

	for rows.Next() {
		record := &entities.Recorder{}

		if err := rows.Scan(
			&record.TransactionId,
			&record.RecordingStateCode,
			&record.RecordingCountyName,
			&record.RecordingJurisdictionName,
			&record.RecordingCountyFips,
			&record.DocumentTypeCode,
			&record.DocumentNumber,
			&record.DocumentNumberLegacy,
			&record.InstrumentNumber,
			&record.Book,
			&record.Page,
			&record.InstrumentDate,
			&record.RecordingDate,
			&record.TransactionType,
			&record.PurchaseTypeCode,
			&record.IsForeclosureAuction,
			&record.DistressCircumstanceCode,
			&record.IsQuitclaim,
			&record.MultiParcel,
			&record.ArmsLength,
			&record.PartialInterest,
			&record.TransferAmount,
			&record.TransferAmountAccuracy,
			&record.TransferTaxTotal,
			&record.TransferTaxCity,
			&record.TransferTaxCounty,
			&record.Grantor1FullName,
			&record.Grantor1FirstName,
			&record.Grantor1MiddleName,
			&record.Grantor1LastName,
			&record.Grantor1Suffix,
			&record.Grantor1EntityType,
			&record.Grantor1OwnerType,
			&record.Grantor2FullName,
			&record.Grantor2FirstName,
			&record.Grantor2MiddleName,
			&record.Grantor2LastName,
			&record.Grantor2Suffix,
			&record.Grantor2EntityType,
			&record.Grantor2OwnerType,
			&record.Grantor3FullName,
			&record.Grantor3FirstName,
			&record.Grantor3MiddleName,
			&record.Grantor3LastName,
			&record.Grantor3Suffix,
			&record.Grantor3EntityType,
			&record.Grantor4FullName,
			&record.Grantor4FirstName,
			&record.Grantor4MiddleName,
			&record.Grantor4LastName,
			&record.Grantor4Suffix,
			&record.Grantor4EntityType,
			&record.GrantorFullStreetAddress,
			&record.GrantorHouseNumber,
			&record.GrantorStreetPreDirection,
			&record.GrantorStreetName,
			&record.GrantorStreetSuffix,
			&record.GrantorStreetPostDirection,
			&record.GrantorUnitType,
			&record.GrantorUnitValue,
			&record.GrantorCity,
			&record.GrantorState,
			&record.GrantorZip5,
			&record.GrantorZip4,
			&record.GrantorCarrierRoute,
			&record.GrantorAddressFormat,
			&record.GrantorAddressPrivacy,
			&record.Grantee1FullName,
			&record.Grantee1FirstName,
			&record.Grantee1MiddleName,
			&record.Grantee1LastName,
			&record.Grantee1Suffix,
			&record.Grantee1EntityType,
			&record.Grantee1OwnerType,
			&record.Grantee2FullName,
			&record.Grantee2FirstName,
			&record.Grantee2MiddleName,
			&record.Grantee2LastName,
			&record.Grantee2Suffix,
			&record.Grantee2EntityType,
			&record.GranteeVesting1,
			&record.Grantee3FullName,
			&record.Grantee3FirstName,
			&record.Grantee3MiddleName,
			&record.Grantee3LastName,
			&record.Grantee3Suffix,
			&record.Grantee3EntityType,
			&record.Grantee4FullName,
			&record.Grantee4FirstName,
			&record.Grantee4MiddleName,
			&record.Grantee4LastName,
			&record.Grantee4Suffix,
			&record.Grantee4EntityType,
			&record.GranteeMailCareOfName,
			&record.GranteeEntityCount,
			&record.GranteeVesting2,
			&record.IsGranteeInvestor,
			&record.GranteeMailFullStreetAddress,
			&record.GranteeMailHouseNumber,
			&record.GranteeMailStreetPreDirection,
			&record.GranteeMailStreetName,
			&record.GranteeMailStreetSuffix,
			&record.GranteeMailStreetPostDirection,
			&record.GranteeMailUnitType,
			&record.GranteeMailUnitValue,
			&record.GranteeMailCity,
			&record.GranteeMailState,
			&record.GranteeMailZip5,
			&record.GranteeMailZip4,
			&record.GranteeMailCarrierRoute,
			&record.GranteeMailAddressFormat,
			&record.GranteeMailAddressPrivacy,
			&record.GranteeGrantorRelationshipCode,
			&record.TitleCompanyCode,
			&record.TitleCompanyName,
			&record.TitleCompanyRaw,
			&record.LegalDescriptionPart1,
			&record.LegalDescriptionPart2,
			&record.LegalDescriptionPart3,
			&record.LegalDescriptionPart4,
			&record.LegalRange,
			&record.LegalTownship,
			&record.LegalSection,
			&record.LegalDistrict,
			&record.LegalSubDivision,
			&record.LegalTract,
			&record.LegalBlock,
			&record.LegalLot,
			&record.LegalUnit,
			&record.LegalPlatMapBook,
			&record.LegalPlatMapPage,
			&record.Apn,
			&record.ApnOriginal,
			&record.FullStreetAddress,
			&record.HouseNumber,
			&record.StreetPreDirection,
			&record.StreetName,
			&record.StreetSuffix,
			&record.StreetPostDirection,
			&record.UnitType,
			&record.UnitNumber,
			&record.City,
			&record.State,
			&record.Zip5,
			&record.Zip4,
			&record.PropertyCarrierRoute,
			&record.PropertyAddressFormat,
			&record.PropertyAddressPrivacy,
			&record.RecorderMapReference,
			&record.PropertyUseGroup,
			&record.PropertyUseStandardized,
			&record.Mortgage1DocumentNumber,
			&record.Mortgage1DocumentNumberLegacy,
			&record.Mortgage1InstrumentNumber,
			&record.Mortgage1Book,
			&record.Mortgage1Page,
			&record.Mortgage1RecordingDate,
			&record.Mortgage1Type,
			&record.Mortgage1Amount,
			&record.Mortgage1LenderCode,
			&record.Mortgage1LenderName,
			&record.Mortgage1LenderFirstName,
			&record.Mortgage1LenderLastName,
			&record.Mortgage1LenderAddress,
			&record.Mortgage1LenderCity,
			&record.Mortgage1LenderState,
			&record.Mortgage1LenderZip,
			&record.Mortgage1LenderZip4,
			&record.Mortgage1LenderEntityType,
			&record.IsMortgage1SellerCarryBack,
			&record.Mortgage1Term,
			&record.Mortgage1TermType,
			&record.Mortgage1TermDate,
			&record.HasMortgage1PrepaymentPenalty,
			&record.Mortgage1PrepaymentTerm,
			&record.Mortgage1InterestRateType,
			&record.Mortgage1InterestRate,
			&record.Mortgage1InitialInterestType,
			&record.Mortgage1FixedStepConversionRate,
			&record.HasMortgage1AdjustableRateRider,
			&record.Mortgage1InterestChangeYear,
			&record.Mortgage1InterestChangeMonth,
			&record.Mortgage1InterestChangeDay,
			&record.Mortgage1MinFirstChangeRate,
			&record.Mortgage1MaxFirstChangeRate,
			&record.Mortgage1InterestChangeFrequency,
			&record.Mortgage1InterestMargin,
			&record.Mortgage1InterestIndex,
			&record.Mortgage1MaxInterestRate,
			&record.Mortgage1AdjustableRateIndex,
			&record.IsMortgage1InterestOnly,
			&record.Mortgage1InterestOnlyPeriod,
			&record.Mortgage2DocumentNumber,
			&record.Mortgage2DocumentNumberLegacy,
			&record.Mortgage2InstrumentNumber,
			&record.Mortgage2Book,
			&record.Mortgage2Page,
			&record.Mortgage2RecordingDate,
			&record.Mortgage2Type,
			&record.Mortgage2Amount,
			&record.Mortgage2LenderCode,
			&record.Mortgage2LenderName,
			&record.Mortgage2LenderFirstName,
			&record.Mortgage2LenderLastName,
			&record.Mortgage2LenderAddress,
			&record.Mortgage2LenderCity,
			&record.Mortgage2LenderState,
			&record.Mortgage2LenderZip,
			&record.Mortgage2LenderZip4,
			&record.Mortgage2LenderEntityType,
			&record.IsMortgage2SellerCarryBack,
			&record.Mortgage2Term,
			&record.Mortgage2TermType,
			&record.Mortgage2TermDate,
			&record.HasMortgage2PrepaymentPenalty,
			&record.Mortgage2PrepaymentTerm,
			&record.Mortgage2InterestRateType,
			&record.Mortgage2InterestRate,
			&record.Mortgage2InitialInterestType,
			&record.Mortgage2FixedStepConversionRate,
			&record.HasMortgage2AdjustableRateRider,
			&record.Mortgage2InterestChangeYear,
			&record.Mortgage2InterestChangeMonth,
			&record.Mortgage2InterestChangeDay,
			&record.Mortgage2MinFirstChangeRate,
			&record.Mortgage2MaxFirstChangeRate,
			&record.Mortgage2InterestChangeFrequency,
			&record.Mortgage2InterestMargin,
			&record.Mortgage2InterestIndex,
			&record.Mortgage2MaxInterestRate,
			&record.Mortgage2AdjustableRateIndex,
			&record.IsMortgage2InterestOnly,
			&record.Mortgage2InterestOnlyPeriod,
			&record.PurchaseDownPayment,
			&record.PurchaseLoanToValue,
		); err != nil {
			return nil, &errors.Object{
				Id:     "378b3f42-c6e0-461c-bdb3-8bd95d1ad858",
				Code:   errors.Code_UNKNOWN,
				Detail: "Failed to select row.",
				Cause:  err.Error(),
			}
		}

		out.Records = append(out.Records, record)
	}

	return out, nil
}
