include $(ABODEMINE_WORKSPACE)/code/make/core.mk

ifeq (${GITHUB_ACTIONS},true)
ABODEMINE_BUILD_AGENT := github-runner
ABODEMINE_BUILD_ID := ${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}
ABODEMINE_BUILD_MANAGER := github-actions
ABODEMINE_BUILD_REF := ${GITHUB_REF}
ABODEMINE_BUILD_RUNNER_TMP := ${RUNNER_TEMP}
ABODEMINE_BUILD_TMP := $(ABODEMINE_BUILD_RUNNER_TMP)/$(ABODEMINE_BUILD_ID)
ABODEMINE_BUILD_VERSION := ${GITHUB_SHA}
else
ABODEMINE_BUILD_AGENT := local
ABODEMINE_BUILD_MANAGER ?= ${USER}
ABODEMINE_BUILD_REF := $(shell git symbolic-ref HEAD)
ABODEMINE_BUILD_RUNNER_TMP ?= /tmp/abodemine/build
ABODEMINE_BUILD_TMP := $(ABODEMINE_BUILD_RUNNER_TMP)/$(ABODEMINE_BUILD_ID)
ABODEMINE_BUILD_VERSION ?= $(shell git rev-parse HEAD)
endif

ifndef ABODEMINE_BUILD_DIR
ABODEMINE_BUILD_DIR := $(CURDIR)
endif

ABODEMINE_BUILD_ENV := $(ABODEMINE_BUILD_TMP)/.env
ABODEMINE_BUILD_PARAMS := ${ABODEMINE_BUILD_TMP}/.params.json
ABODEMINE_BUILD_TIMESTAMP := $(shell date -u +"%Y-%m-%dT%H-%M-%SZ")

ifndef ABODEMINE_BUILD_ID
$(error ABODEMINE_BUILD_ID is not set)
endif

# The env file should be created once per job run.
$(ABODEMINE_BUILD_ENV):
	@mkdir -p $(ABODEMINE_BUILD_TMP)
	@rm -f $@

	@echo "ABODEMINE_BUILD_AGENT=$(ABODEMINE_BUILD_AGENT)" >> $@
	@echo "ABODEMINE_BUILD_DIR=$(ABODEMINE_BUILD_DIR)" >> $@
	@echo "ABODEMINE_BUILD_ENV=$@" >> $@
	@echo "ABODEMINE_BUILD_ID=$(ABODEMINE_BUILD_ID)" >> $@
	@echo "ABODEMINE_BUILD_MANAGER=$(ABODEMINE_BUILD_MANAGER)" >> $@
	@echo "ABODEMINE_BUILD_PARAMS=$(ABODEMINE_BUILD_PARAMS)" >> $@
	@echo "ABODEMINE_BUILD_REF=$(ABODEMINE_BUILD_REF)" >> $@
	@echo "ABODEMINE_BUILD_RUNNER_TMP=$(ABODEMINE_BUILD_RUNNER_TMP)" >> $@
	@echo "ABODEMINE_BUILD_TIMESTAMP=$(ABODEMINE_BUILD_TIMESTAMP)" >> $@
	@echo "ABODEMINE_BUILD_TMP=$(ABODEMINE_BUILD_TMP)" >> $@
	@echo "ABODEMINE_BUILD_VERSION=$(ABODEMINE_BUILD_VERSION)" >> $@
	@echo "ABODEMINE_NAMESPACE=$(ABODEMINE_NAMESPACE)" >> $@
	@echo "ABODEMINE_WORKSPACE=$(ABODEMINE_WORKSPACE)" >> $@

	@echo "MAKE=$(MAKE)" >> $@

	@if test -n "$(ABODEMINE_LAMBDA_NAME)"; then \
		echo "ABODEMINE_LAMBDA_NAME=$(ABODEMINE_LAMBDA_NAME)" >> $@; \
	fi

	@if test -n "$(ABODEMINE_LAMBDA_SLUG)"; then \
		echo "ABODEMINE_LAMBDA_SLUG=$(ABODEMINE_LAMBDA_SLUG)" >> $@; \
	fi

	@if test -n "$(ABODEMINE_PROJECT_NAME)"; then \
		echo "ABODEMINE_PROJECT_NAME=$(ABODEMINE_PROJECT_NAME)" >> $@; \
	fi

	@if test -n "$(ABODEMINE_PROJECT_PREFIX)"; then \
		echo "ABODEMINE_PROJECT_PREFIX=$(ABODEMINE_PROJECT_PREFIX)" >> $@; \
	fi

	@if test -n "$(ABODEMINE_PROJECT_SLUG)"; then \
		echo "ABODEMINE_PROJECT_SLUG=$(ABODEMINE_PROJECT_SLUG)" >> $@; \
	fi

	@if test -n "$(ABODEMINE_PROJECT_SUFFIX)"; then \
		echo "ABODEMINE_PROJECT_SUFFIX=$(ABODEMINE_PROJECT_SUFFIX)" >> $@; \
	fi

	@if test -n "$(ABODEMINE_TASK_NAME)"; then \
		echo "ABODEMINE_TASK_NAME=$(ABODEMINE_TASK_NAME)" >> $@; \
	fi

	@if test -n "$(ABODEMINE_TASK_SLUG)"; then \
		echo "ABODEMINE_TASK_SLUG=$(ABODEMINE_TASK_SLUG)" >> $@; \
	fi

	@if test -n "$(ABODEMINE_TOFU_DEPLOYMENT)"; then \
		echo "ABODEMINE_TOFU_DEPLOYMENT=$(ABODEMINE_TOFU_DEPLOYMENT)" >> $@; \
	fi

	@if test -n "$(ABODEMINE_TOFU_PROJECT)"; then \
		echo "ABODEMINE_TOFU_PROJECT=$(ABODEMINE_TOFU_PROJECT)" >> $@; \
	fi

ifeq ($(ABODEMINE_BUILD_AGENT),local)
	@cat ${ABODEMINE_WORKSPACE}/.env.${ABODEMINE_NAMESPACE} >> $@
endif

	@echo "ABODEMINE_BUILD_ENV: $@"

$(ABODEMINE_BUILD_PARAMS):
	touch ${ABODEMINE_WORKSPACE}/.env.${ABODEMINE_NAMESPACE}
	ABODEMINE_BUILD_PARAMS=$@ \
	ABODEMINE_BUILD_PARAMS_VERSION=$(ABODEMINE_BUILD_PARAMS_VERSION) \
	$(MAKE) -C ${ABODEMINE_WORKSPACE} params
